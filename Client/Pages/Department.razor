@page "/Department"
@using achraf.Shared
@using achraf.Shared.Models
@inject HttpClient Http
@using System.Linq

<h1> ASP.NET Core BLAZOR CRUD demo for Youtube</h1>
<hr />
<table width="100%" style="background:#05163D;color:honeydew">
    <tr>
        <td width="20"> </td>
        <td>
            <h2> Add New Department</h2>
        </td>
        <td> </td>
        <td align="right">
            <button class="btn btn-info" @onclick="(async () => await AddNewDepartment())">Clear</button>
        </td>
        <td width="10"> </td>
    </tr>
    <tr>
        <td colspan="2"></td>
    </tr>
</table>
<hr />



<div class="container">

    <form>
        <div class="form-group">
            <label for="GendersId">Id</label>

            <input type="text" class="form-control" @bind="TheDepartment.DepartmentsId" readonly />

        </div>
        <div class="form-group">
            <label for="Name">Name</label>

            <input type="text" class="form-control" @bind="TheDepartment.Name" />
        </div>

        <div class="form-group" hidden>
            <label for="IsVisible">IsVisible</label>

            <input type="text" class="form-control" bind="@TheDepartment.IsVisible.ToString()" value="@TheDepartment.IsVisible.ToString()" readonly />
        </div>

        <div class="form-group form-check">
            <label class="form-check-label">
                <input type="checkbox" @bind="TheDepartment.IsVisible"  class="form-check-input" />Make It Visible ?

            </label>
        </div>
        <button type="button" class="btn btn-success" @onclick="(async () => await AddDepartment())" style="width:220px;">Save</button>

    </form>
</div>


<br />
<table width="100%" style="background:#0A2464;color:honeydew">
    <tr>
        <td width="20"> </td>
        <td>
            <h2>Department Details</h2>
        </td>

    </tr>
    <tr>
        <td colspan="2"></td>
    </tr>
</table>

@if (DepartmentGroupe == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Department ID</th>
                <th>Department Name</th>
                <th>Added Time</th>
                <th>Visible</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var _Departments in DepartmentGroupe)
            {
                <tr>
                    <td>@_Departments.DepartmentsId</td>
                    <td>@_Departments.Name</td>
                    <td>@_Departments.Urd</td>
                    <td>@_Departments.IsVisible</td>


                    <td><button class="btn btn-primary" @onclick="@(async () => await EditDepartment(_Departments.DepartmentsId))" style="width:110px;">Edit</button></td>
                    <td><button class="btn btn-danger" @onclick="@(async () => await DeleteDepartment(_Departments.DepartmentsId))">Delete</button></td>
                </tr>

            }
        </tbody>
    </table>
}

@functions {

 
    private bool IsAdmin { get; set; } = true;
    Departments[] DepartmentGroupe;

    Departments TheDepartment = new Departments();

    string ids = "0";
    bool showAddrow = false;
    protected override async Task OnInitializedAsync()
    {
        DepartmentGroupe = await Http.GetJsonAsync<Departments[]>("/api/Departments/");
    }

    async Task AddNewDepartment()
    {
        TheDepartment = new Departments();

    }
    // Add New Department Details Method
    async Task AddDepartment()

    {
        TheDepartment.Urd = (System.DateTime.Now).ToShortDateString().ToString();


        if (TheDepartment.DepartmentsId == 0)

        {
            await Http.SendJsonAsync(HttpMethod.Post, "/api/Departments/", TheDepartment);

        }
        else
        {
            await Http.SendJsonAsync(HttpMethod.Put, "/api/Departments/" + TheDepartment.DepartmentsId, TheDepartment);
        }
        TheDepartment = new Departments();
        DepartmentGroupe = await Http.GetJsonAsync<Departments[]>("/api/Departments/");
    }
    // Edit Method
    protected async Task EditDepartment(int DepartmentsId)
    {
        ids = DepartmentsId.ToString();

        TheDepartment = await Http.GetJsonAsync<Departments>("/api/Departments/" + Convert.ToInt32(DepartmentsId));
    }
    // Delte Method
    protected async Task DeleteDepartment(int DepartmentsId)
    {
        ids = DepartmentsId.ToString();
        await Http.DeleteAsync("/api/Departments/" + Convert.ToInt32(DepartmentsId));


        DepartmentGroupe = await Http.GetJsonAsync<Departments[]>("/api/Departments/");
    }

}

